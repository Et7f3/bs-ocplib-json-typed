// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Format = require("bs-platform/lib/js/format.js");
var Printf = require("bs-platform/lib/js/printf.js");
var Caml_float = require("bs-platform/lib/js/caml_float.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Caml_string = require("bs-platform/lib/js/caml_string.js");

function repr_uid(param) {
  return /* record */[/* contents */undefined];
}

function eq_repr_uid(a, ta, tb) {
  tb[0] = undefined;
  ta[0] = Caml_option.some(a);
  return tb[0];
}

function view(v) {
  return v;
}

function repr(v) {
  return v;
}

var repr_uid$1 = /* record */[/* contents */undefined];

var Ezjsonm = /* module */[
  /* view */view,
  /* repr */repr,
  /* repr_uid */repr_uid$1
];

function view$1(param) {
  if (typeof param === "number") {
    return /* Null */870828711;
  } else {
    var variant = param[0];
    if (variant >= 726928360) {
      if (variant !== 737456202) {
        if (variant >= 963043957) {
          return /* `O */[
                  79,
                  param[1]
                ];
        } else {
          return /* `A */[
                  65,
                  param[1]
                ];
        }
      } else {
        return /* `Bool */[
                737456202,
                param[1]
              ];
      }
    } else if (variant >= 365180284) {
      if (variant >= 708012133) {
        var match = param[1];
        var match$1 = match[1];
        var label = match[0];
        if (match$1 !== undefined) {
          return /* `A */[
                  65,
                  /* :: */[
                    /* `String */[
                      -976970511,
                      label
                    ],
                    /* :: */[
                      match$1,
                      /* [] */0
                    ]
                  ]
                ];
        } else {
          return /* `String */[
                  -976970511,
                  label
                ];
        }
      } else {
        return /* `Float */[
                365180284,
                param[1]
              ];
      }
    } else if (variant >= 3654863) {
      return /* `Float */[
              365180284,
              param[1]
            ];
    } else {
      return /* `String */[
              -976970511,
              param[1]
            ];
    }
  }
}

function repr$1(param) {
  if (typeof param === "number") {
    return /* Null */870828711;
  } else {
    var variant = param[0];
    if (variant !== 65) {
      if (variant >= 365180284) {
        if (variant >= 737456202) {
          return /* `Bool */[
                  737456202,
                  param[1]
                ];
        } else {
          return /* `Float */[
                  365180284,
                  param[1]
                ];
        }
      } else if (variant >= 79) {
        return /* `Assoc */[
                963043957,
                param[1]
              ];
      } else {
        return /* `String */[
                -976970511,
                param[1]
              ];
      }
    } else {
      return /* `List */[
              848054398,
              param[1]
            ];
    }
  }
}

var repr_uid$2 = /* record */[/* contents */undefined];

var Yojson = /* module */[
  /* view */view$1,
  /* repr */repr$1,
  /* repr_uid */repr_uid$2
];

function convert(Repr_f, Repr_t, v) {
  var match = eq_repr_uid(v, Repr_f[/* repr_uid */2], Repr_t[/* repr_uid */2]);
  if (match !== undefined) {
    return Caml_option.valFromOption(match);
  } else {
    var conv = function (v) {
      var v$1 = Curry._1(Repr_f[/* view */0], v);
      if (typeof v$1 === "number") {
        return Curry._1(Repr_t[/* repr */1], v$1);
      } else {
        var variant = v$1[0];
        if (variant !== 65) {
          if (variant !== 79) {
            return Curry._1(Repr_t[/* repr */1], v$1);
          } else {
            return Curry._1(Repr_t[/* repr */1], /* `O */[
                        79,
                        List.map((function (param) {
                                return /* tuple */[
                                        param[0],
                                        conv(param[1])
                                      ];
                              }), v$1[1])
                      ]);
          }
        } else {
          return Curry._1(Repr_t[/* repr */1], /* `A */[
                      65,
                      List.map(conv, v$1[1])
                    ]);
        }
      }
    };
    return conv(v);
  }
}

function pp_string(ppf, s) {
  Format.fprintf(ppf, /* Format */[
        /* Char_literal */Block.__(12, [
            /* "\"" */34,
            /* End_of_format */0
          ]),
        "\""
      ]);
  for(var i = 0 ,i_finish = s.length - 1 | 0; i <= i_finish; ++i){
    var c = Caml_string.get(s, i);
    var exit = 0;
    if (c !== 34) {
      if (c >= 32) {
        if (c !== 92) {
          Curry._1(Format.fprintf(ppf, /* Format */[
                    /* Char */Block.__(0, [/* End_of_format */0]),
                    "%c"
                  ]), c);
        } else {
          Format.fprintf(ppf, /* Format */[
                /* String_literal */Block.__(11, [
                    "\\\\",
                    /* End_of_format */0
                  ]),
                "\\\\"
              ]);
        }
      } else if (c >= 14) {
        exit = 1;
      } else {
        switch (c) {
          case 8 : 
              Format.fprintf(ppf, /* Format */[
                    /* String_literal */Block.__(11, [
                        "\\b",
                        /* End_of_format */0
                      ]),
                    "\\b"
                  ]);
              break;
          case 9 : 
              Format.fprintf(ppf, /* Format */[
                    /* String_literal */Block.__(11, [
                        "\\t",
                        /* End_of_format */0
                      ]),
                    "\\t"
                  ]);
              break;
          case 10 : 
              Format.fprintf(ppf, /* Format */[
                    /* String_literal */Block.__(11, [
                        "\\n",
                        /* End_of_format */0
                      ]),
                    "\\n"
                  ]);
              break;
          case 0 : 
          case 1 : 
          case 2 : 
          case 3 : 
          case 4 : 
          case 5 : 
          case 6 : 
          case 7 : 
          case 11 : 
          case 12 : 
              exit = 1;
              break;
          case 13 : 
              Format.fprintf(ppf, /* Format */[
                    /* String_literal */Block.__(11, [
                        "\\r",
                        /* End_of_format */0
                      ]),
                    "\\r"
                  ]);
              break;
          
        }
      }
    } else {
      Format.fprintf(ppf, /* Format */[
            /* String_literal */Block.__(11, [
                "\\\"",
                /* End_of_format */0
              ]),
            "\\\""
          ]);
    }
    if (exit === 1) {
      Curry._1(Format.fprintf(ppf, /* Format */[
                /* String_literal */Block.__(11, [
                    "\\u",
                    /* Int */Block.__(4, [
                        /* Int_x */6,
                        /* Lit_padding */Block.__(0, [
                            /* Zeros */2,
                            4
                          ]),
                        /* No_precision */0,
                        /* End_of_format */0
                      ])
                  ]),
                "\\u%04x"
              ]), c);
    }
    
  }
  return Format.fprintf(ppf, /* Format */[
              /* Char_literal */Block.__(12, [
                  /* "\"" */34,
                  /* End_of_format */0
                ]),
              "\""
            ]);
}

function pp($staropt$star, $staropt$star$1, Repr, ppf, v) {
  var compact = $staropt$star !== undefined ? $staropt$star : false;
  var pp_string$1 = $staropt$star$1 !== undefined ? $staropt$star$1 : pp_string;
  var pp_compact = function (ppf, v) {
    var match = Curry._1(Repr[/* view */0], v);
    if (typeof match === "number") {
      return Format.fprintf(ppf, /* Format */[
                  /* String_literal */Block.__(11, [
                      "null",
                      /* End_of_format */0
                    ]),
                  "null"
                ]);
    } else {
      var variant = match[0];
      if (variant !== 65) {
        if (variant >= 365180284) {
          if (variant >= 737456202) {
            if (match[1]) {
              return Format.fprintf(ppf, /* Format */[
                          /* String_literal */Block.__(11, [
                              "true",
                              /* End_of_format */0
                            ]),
                          "true"
                        ]);
            } else {
              return Format.fprintf(ppf, /* Format */[
                          /* String_literal */Block.__(11, [
                              "false",
                              /* End_of_format */0
                            ]),
                          "false"
                        ]);
            }
          } else {
            var f = match[1];
            var match$1 = Caml_float.caml_modf_float(f);
            if (match$1[0] === 0.0) {
              return Curry._1(Format.fprintf(ppf, /* Format */[
                              /* Float */Block.__(8, [
                                  /* Float_f */0,
                                  /* No_padding */0,
                                  /* Lit_precision */[0],
                                  /* End_of_format */0
                                ]),
                              "%.0f"
                            ]), match$1[1]);
            } else {
              return Curry._1(Format.fprintf(ppf, /* Format */[
                              /* Float */Block.__(8, [
                                  /* Float_g */9,
                                  /* No_padding */0,
                                  /* No_precision */0,
                                  /* End_of_format */0
                                ]),
                              "%g"
                            ]), f);
            }
          }
        } else if (variant >= 79) {
          var pp_sep = function (ppf, param) {
            return Format.fprintf(ppf, /* Format */[
                        /* Char_literal */Block.__(12, [
                            /* "," */44,
                            /* End_of_format */0
                          ]),
                        ","
                      ]);
          };
          var pp_field = function (ppf, param) {
            return Curry._4(Format.fprintf(ppf, /* Format */[
                            /* Alpha */Block.__(15, [/* Char_literal */Block.__(12, [
                                    /* ":" */58,
                                    /* Alpha */Block.__(15, [/* End_of_format */0])
                                  ])]),
                            "%a:%a"
                          ]), pp_string$1, param[0], pp_compact, param[1]);
          };
          var partial_arg = pp_sep;
          return Curry._2(Format.fprintf(ppf, /* Format */[
                          /* Char_literal */Block.__(12, [
                              /* "{" */123,
                              /* Alpha */Block.__(15, [/* Char_literal */Block.__(12, [
                                      /* "}" */125,
                                      /* End_of_format */0
                                    ])])
                            ]),
                          "{%a}"
                        ]), (function (param, param$1) {
                        return Format.pp_print_list(partial_arg, pp_field, param, param$1);
                      }), match[1]);
        } else {
          return Curry._2(pp_string$1, ppf, match[1]);
        }
      } else {
        var pp_sep$1 = function (ppf, param) {
          return Format.fprintf(ppf, /* Format */[
                      /* Char_literal */Block.__(12, [
                          /* "," */44,
                          /* End_of_format */0
                        ]),
                      ","
                    ]);
        };
        var partial_arg$1 = pp_sep$1;
        return Curry._2(Format.fprintf(ppf, /* Format */[
                        /* Char_literal */Block.__(12, [
                            /* "[" */91,
                            /* Alpha */Block.__(15, [/* Char_literal */Block.__(12, [
                                    /* "]" */93,
                                    /* End_of_format */0
                                  ])])
                          ]),
                        "[%a]"
                      ]), (function (param, param$1) {
                      return Format.pp_print_list(partial_arg$1, pp_compact, param, param$1);
                    }), match[1]);
      }
    }
  };
  var pp_box = function (ppf, v) {
    var match = Curry._1(Repr[/* view */0], v);
    if (typeof match === "number") {
      return pp_compact(ppf, v);
    } else {
      var variant = match[0];
      if (variant !== 65) {
        if (variant !== 79) {
          return pp_compact(ppf, v);
        } else {
          var l = match[1];
          if (l) {
            var pp_sep = function (ppf, param) {
              return Format.fprintf(ppf, /* Format */[
                          /* Char_literal */Block.__(12, [
                              /* "," */44,
                              /* Formatting_lit */Block.__(17, [
                                  /* Break */Block.__(0, [
                                      "@ ",
                                      1,
                                      0
                                    ]),
                                  /* End_of_format */0
                                ])
                            ]),
                          ",@ "
                        ]);
            };
            var pp_field = function (ppf, param) {
              return Curry._4(Format.fprintf(ppf, /* Format */[
                              /* Formatting_gen */Block.__(18, [
                                  /* Open_box */Block.__(1, [/* Format */[
                                        /* String_literal */Block.__(11, [
                                            "<hov 2>",
                                            /* End_of_format */0
                                          ]),
                                        "<hov 2>"
                                      ]]),
                                  /* Alpha */Block.__(15, [/* Char_literal */Block.__(12, [
                                          /* ":" */58,
                                          /* Formatting_lit */Block.__(17, [
                                              /* Break */Block.__(0, [
                                                  "@ ",
                                                  1,
                                                  0
                                                ]),
                                              /* Alpha */Block.__(15, [/* Formatting_lit */Block.__(17, [
                                                      /* Close_box */0,
                                                      /* End_of_format */0
                                                    ])])
                                            ])
                                        ])])
                                ]),
                              "@[<hov 2>%a:@ %a@]"
                            ]), pp_string$1, param[0], pp_box, param[1]);
            };
            var partial_arg = pp_sep;
            return Curry._2(Format.fprintf(ppf, /* Format */[
                            /* Formatting_gen */Block.__(18, [
                                /* Open_box */Block.__(1, [/* Format */[
                                      /* String_literal */Block.__(11, [
                                          "<hov 2>",
                                          /* End_of_format */0
                                        ]),
                                      "<hov 2>"
                                    ]]),
                                /* String_literal */Block.__(11, [
                                    "{ ",
                                    /* Alpha */Block.__(15, [/* String_literal */Block.__(11, [
                                            " }",
                                            /* Formatting_lit */Block.__(17, [
                                                /* Close_box */0,
                                                /* End_of_format */0
                                              ])
                                          ])])
                                  ])
                              ]),
                            "@[<hov 2>{ %a }@]"
                          ]), (function (param, param$1) {
                          return Format.pp_print_list(partial_arg, pp_field, param, param$1);
                        }), l);
          } else {
            return Format.fprintf(ppf, /* Format */[
                        /* String_literal */Block.__(11, [
                            "{}",
                            /* End_of_format */0
                          ]),
                        "{}"
                      ]);
          }
        }
      } else {
        var l$1 = match[1];
        if (l$1) {
          var pp_sep$1 = function (ppf, param) {
            return Format.fprintf(ppf, /* Format */[
                        /* Char_literal */Block.__(12, [
                            /* "," */44,
                            /* Formatting_lit */Block.__(17, [
                                /* Break */Block.__(0, [
                                    "@ ",
                                    1,
                                    0
                                  ]),
                                /* End_of_format */0
                              ])
                          ]),
                        ",@ "
                      ]);
          };
          var partial_arg$1 = pp_sep$1;
          return Curry._2(Format.fprintf(ppf, /* Format */[
                          /* Formatting_gen */Block.__(18, [
                              /* Open_box */Block.__(1, [/* Format */[
                                    /* String_literal */Block.__(11, [
                                        "<hov 2>",
                                        /* End_of_format */0
                                      ]),
                                    "<hov 2>"
                                  ]]),
                              /* String_literal */Block.__(11, [
                                  "[ ",
                                  /* Alpha */Block.__(15, [/* String_literal */Block.__(11, [
                                          " ]",
                                          /* Formatting_lit */Block.__(17, [
                                              /* Close_box */0,
                                              /* End_of_format */0
                                            ])
                                        ])])
                                ])
                            ]),
                          "@[<hov 2>[ %a ]@]"
                        ]), (function (param, param$1) {
                        return Format.pp_print_list(partial_arg$1, pp_box, param, param$1);
                      }), l$1);
        } else {
          return Format.fprintf(ppf, /* Format */[
                      /* String_literal */Block.__(11, [
                          "[]",
                          /* End_of_format */0
                        ]),
                      "[]"
                    ]);
        }
      }
    }
  };
  if (compact) {
    return pp_compact(ppf, v);
  } else {
    return pp_box(ppf, v);
  }
}

function from_yojson(non_basic) {
  var to_basic = function (non_basic) {
    if (typeof non_basic === "number") {
      return /* Null */870828711;
    } else {
      var variant = non_basic[0];
      if (variant >= 726928360) {
        if (variant !== 737456202) {
          if (variant >= 963043957) {
            return /* `Assoc */[
                    963043957,
                    List.map((function (param) {
                            return /* tuple */[
                                    param[0],
                                    to_basic(param[1])
                                  ];
                          }), non_basic[1])
                  ];
          } else {
            return /* `List */[
                    848054398,
                    List.map(to_basic, non_basic[1])
                  ];
          }
        } else {
          return /* `Bool */[
                  737456202,
                  non_basic[1]
                ];
        }
      } else if (variant >= 365180284) {
        if (variant >= 708012133) {
          var match = non_basic[1];
          var match$1 = match[1];
          var label = match[0];
          if (match$1 !== undefined) {
            return /* `List */[
                    848054398,
                    /* :: */[
                      /* `String */[
                        -976970511,
                        label
                      ],
                      /* :: */[
                        to_basic(match$1),
                        /* [] */0
                      ]
                    ]
                  ];
          } else {
            return /* `String */[
                    -976970511,
                    label
                  ];
          }
        } else {
          return /* `Float */[
                  365180284,
                  non_basic[1]
                ];
        }
      } else if (variant >= 3654863) {
        return /* `Int */[
                3654863,
                non_basic[1]
              ];
      } else {
        return /* `String */[
                -976970511,
                non_basic[1]
              ];
      }
    }
  };
  var to_value = function (param) {
    if (typeof param === "number") {
      return /* Null */870828711;
    } else {
      var variant = param[0];
      if (variant >= 365180284) {
        if (variant >= 848054398) {
          if (variant >= 963043957) {
            return /* `O */[
                    79,
                    List.map((function (param) {
                            return /* tuple */[
                                    param[0],
                                    to_value(param[1])
                                  ];
                          }), param[1])
                  ];
          } else {
            return /* `A */[
                    65,
                    List.map(to_value, param[1])
                  ];
          }
        } else if (variant >= 737456202) {
          return /* `Bool */[
                  737456202,
                  param[1]
                ];
        } else {
          return /* `Float */[
                  365180284,
                  param[1]
                ];
        }
      } else if (variant >= 3654863) {
        return /* `Float */[
                365180284,
                param[1]
              ];
      } else {
        return /* `String */[
                -976970511,
                param[1]
              ];
      }
    }
  };
  return to_value(to_basic(non_basic));
}

function to_yojson(json) {
  var aux = function (param) {
    if (typeof param === "number") {
      return /* Null */870828711;
    } else {
      var variant = param[0];
      if (variant !== 65) {
        if (variant >= 365180284) {
          if (variant >= 737456202) {
            return /* `Bool */[
                    737456202,
                    param[1]
                  ];
          } else {
            var f = param[1];
            var match = Caml_float.caml_modf_float(f);
            var intr = match[1];
            var max_intf = 1073741823;
            var min_intf = -max_intf - 1;
            if (match[0] === 0.0) {
              if (intr >= min_intf && intr <= max_intf) {
                return /* `Int */[
                        3654863,
                        intr | 0
                      ];
              } else {
                return /* `Intlit */[
                        -752863768,
                        Curry._1(Printf.sprintf(/* Format */[
                                  /* Float */Block.__(8, [
                                      /* Float_f */0,
                                      /* No_padding */0,
                                      /* Lit_precision */[0],
                                      /* End_of_format */0
                                    ]),
                                  "%.0f"
                                ]), intr)
                      ];
              }
            } else {
              return /* `Float */[
                      365180284,
                      f
                    ];
            }
          }
        } else if (variant >= 79) {
          return /* `Assoc */[
                  963043957,
                  List.map((function (param) {
                          return /* tuple */[
                                  param[0],
                                  aux(param[1])
                                ];
                        }), param[1])
                ];
        } else {
          return /* `String */[
                  -976970511,
                  param[1]
                ];
        }
      } else {
        return /* `List */[
                848054398,
                List.map(aux, param[1])
              ];
      }
    }
  };
  return aux(json);
}

function pp_any(compact, pp_string, param, ppf, param$1) {
  return pp(compact, pp_string, param$1[0], ppf, param$1[1]);
}

function any_to_repr(repr_t, param) {
  return convert(param[0], repr_t, param[1]);
}

function repr_to_any(repr, v) {
  return /* Value_with_repr */[
          repr,
          v
        ];
}

function from_any(repr) {
  return any_to_repr(Ezjsonm, repr);
}

function to_any(v) {
  return /* Value_with_repr */[
          Ezjsonm,
          v
        ];
}

exports.repr_uid = repr_uid;
exports.convert = convert;
exports.pp = pp;
exports.Ezjsonm = Ezjsonm;
exports.Yojson = Yojson;
exports.any_to_repr = any_to_repr;
exports.repr_to_any = repr_to_any;
exports.pp_any = pp_any;
exports.from_yojson = from_yojson;
exports.to_yojson = to_yojson;
exports.from_any = from_any;
exports.to_any = to_any;
/* Format Not a pure module */
